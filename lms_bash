####                               -*- mode: shell-script -*-
# bash support for the python lms script
#
# requires fzf
# ensure lms is on PATH
#    ln -s /path/to/lms.py /usr/local/bin/lms
# add to .bashrc: (or use LMS_DEFAULT_HOST and LMS_DEFAULT_PLAYER)
#   export LMS_HOST=<host>
#   export LMS_PLAYER=<player>
#   source /path/to/lms_bash
#
# lms_nowplaying - show the current playlist
#    Select      : set current track
#    Alt-x       : pause
#    Alt-s       : stop
#    Alt-k       : prev track
#    Alt-j       : next track
#    Ctl-<space> : set current track
#    Ctl-r       : reload track list
#
# lms_search_and_enqueue - search for tracks and add them to the current playlist
#    <enter>     : drill down - artists -> albums -> tracks
#    Alt-a       : add selected/marked tracks to playlist
#    Alt-t       : insert selected/marked tracks into playlist after current track
#    Alt-p       : play selected/marked tracks
#    Alt-l       : view current playlist
#    Alt-x       : pause
#    Alt-s       : stop
#    Alt-k       : play prev track
#    Alt-j       : play next track
#


# option not supported on older fzf versions (ubuntu 20.04)
export _LMS_EXTRA_ARGS=$(if [ `fzf --version | ( IFS=". " ; read major minor rest && echo $minor)` -ge 28 ]; then echo "--header-first"; fi)

lms_status ()
{
    local playerargs
    if [[ -n $LMS_HOST ]]; then
        playerargs="$playerargs -a$LMS_HOST"
    fi
    if [[ -n $LMS_PLAYER ]]; then
        playerargs="$playerargs -n$LMS_PLAYER"
    fi

    lms $playerargs -s
}

lms_nowplaying () {
    local playerargs
    if [[ -n $LMS_HOST ]]; then
        playerargs="$playerargs -a$LMS_HOST"
    fi
    if [[ -n $LMS_PLAYER ]]; then
        playerargs="$playerargs -n$LMS_PLAYER"
    fi

    lms $playerargs -s setcurrent  \
	$(lms $playerargs -S playing | \
	      fzf --tac --header-lines=1 $_LMS_EXTRA_ARGS  \
		  --preview "lms $playerargs -Z playinginfo {n}"  \
		  --bind "alt-x:execute-silent(lms $playerargs pause)+reload(lms $playerargs -S playing)"  \
		  --bind "alt-s:execute-silent(lms $playerargs stop)+reload(lms $playerargs -S playing)"  \
		  --bind "alt-k:execute-silent(lms $playerargs prev)+reload(lms $playerargs -S playing)"  \
		  --bind "alt-j:execute-silent(lms $playerargs next)+reload(lms $playerargs -S playing)"  \
		  --bind "ctrl-space:execute-silent(lms $playerargs -S setcurrent {1})+reload(lms $playerargs -S playing)"  \
		  --bind "ctrl-r:reload(lms $playerargs -S playing)"
	)
}

lms_search_and_enqueue() { # [$opts...] $search_type $terms...
    local playerargs
    if [[ -n $LMS_HOST ]]; then
        playerargs="$playerargs -a$LMS_HOST"
    fi
    if [[ -n $LMS_PLAYER ]]; then
        playerargs="$playerargs -n$LMS_PLAYER"
    fi
    export -f lms_search_and_enqueue
    local searchargs
    while [[ "$1" == -* ]]; do
	    searchargs="$1 $searchargs"
	    shift
    done
    local stype=$1
    local action
    case $stype in
	 artists )
         action="execute:(lms_search_and_enqueue -r albums artist_id:{1})"
	     ;;
	 albums )
	     action="execute:(lms_search_and_enqueue -r tracks album_id:{1})"
	     ;;
	 * )
	     action="execute-silent:(ignore)"
    esac
    #--header=$stype $_LMS_EXTRA_ARGS  \
    lms $playerargs $searchargs search $stype "${@:2}"  \
	|  \
	fzf --tac -m --with-nth="2.." --no-hscroll  \
	    --prompt="$stype> "  \
	    --preview="lms $playerargs info $stype {1}"  \
	    --bind "alt-a:execute-silent(lms $playerargs -e add enqueue $stype {+1})+preview:echo -e \"Adding to playlist...\n{+2..}\""  \
	    --bind "alt-t:execute-silent(lms $playerargs -e insert enqueue $stype {+1})+preview:echo -e \"Inserting into playlist...\n{+2..}\""  \
	    --bind "alt-p:execute-silent(lms $playerargs -e play enqueue $stype {+1})+preview:echo -e \"Playing...\n{+2..}\""  \
        --bind "alt-l:execute(echo '' && lms $playerargs -s playing && read -p '  <Press Enter to continue>' </dev/tty)"  \
	    --bind "alt-x:execute-silent(lms $playerargs pause)"  \
	    --bind "alt-s:execute-silent(lms $playerargs stop)"  \
	    --bind "alt-k:execute-silent(lms $playerargs prev)"  \
	    --bind "alt-j:execute-silent(lms $playerargs next)"  \
        --bind "enter:execute:($action)"
}

alias fm='lms_status'
alias ff='lms_nowplaying'
alias fa='lms_search_and_enqueue albums'
alias fr='lms_search_and_enqueue artists'
alias ft='lms_search_and_enqueue tracks'

